{"version":3,"sources":["firebase.js","Components/SignIn.js","Components/SignUp.js","providers/UserProvider.js","Components/ProfilePage.js","Components/PasswordReset.js","Components/Application.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","signInWithGoogle","event","preventDefault","signInWithPopup","SignIn","firestore","useState","email","setEmail","password","setPassword","error","setError","showEmailForm","setShowEmailForm","signInWithEmailAndPasswordHandler","signInWithEmailAndPassword","catch","console","onChangeHandler","currentTarget","name","value","className","onClick","type","onChange","message","to","SignUp","createUserWithEmailAndPasswordHandler","a","createUserWithEmailAndPassword","UserContext","createContext","user","UserProvider","props","setUser","useEffect","onAuthStateChanged","userAuth","Provider","children","ProfilePage","useContext","signOut","PasswordReset","emailHasBeenSent","setEmailHasBeenSent","emailSentMessage","sendPasswordResetEmail","then","setTimeout","sendResetEmail","Application","path","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.411bed8b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBBqLYo-c_NWFqsFCpJ_1X-VwbdqXJSnfw\",\r\n    authDomain: \"fitness-bcc01.firebaseapp.com\",\r\n    databaseURL: \"https://fitness-bcc01.firebaseio.com\",\r\n    projectId: \"fitness-bcc01\",\r\n    storageBucket: \"fitness-bcc01.appspot.com\",\r\n    messagingSenderId: \"114678639191\",\r\n    appId: \"1:114678639191:web:67a98f41749d33ffc59112\",\r\n    measurementId: \"G-75QSFDF5TV\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = event => {\r\n  event.preventDefault();\r\n  auth.signInWithPopup(provider);\r\n};\r\n\r\nexport const firestore = firebase.firestore();","import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nimport { signInWithGoogle, auth } from \"../firebase\";\r\n\r\nconst SignIn = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [showEmailForm, setShowEmailForm] = useState(false);\r\n\r\n    const emailForm = () => {\r\n        const errorMessage = () => {\r\n            if (error) {\r\n                return (\r\n                    <div className=\"ui message red\">\r\n                        <div className=\"header\">Error</div>\r\n                        {error.message}\r\n                    </div>\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        };\r\n        \r\n        if (showEmailForm) {\r\n            return (\r\n                <form className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"userEmail\"\r\n                            value={email}\r\n                            onChange={event => onChangeHandler(event)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"userPassword\"\r\n                            value={password}\r\n                            onChange={event => onChangeHandler(event)}\r\n                        />\r\n                    </div>\r\n\r\n                    {errorMessage()}\r\n\r\n                    <button\r\n                        className=\"ui button\"\r\n                        onClick={event => {signInWithEmailAndPasswordHandler(event, email, password)}}\r\n                    >\r\n                        Sign In\r\n                    </button>\r\n                    <p>\r\n                        Don't have an account?\r\n                        {\" \"}\r\n                        <Link to=\"signUp\">\r\n                            Sign Up Here\r\n                        </Link>\r\n                        {\" \"}\r\n                        <br />{\" \"}\r\n                        <Link to=\"passwordReset\">\r\n                            Forgot Password?\r\n                        </Link>\r\n                    </p>\r\n                </form>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n        event.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n            setError(error);\r\n            console.error(error);\r\n        });\r\n    };\r\n\r\n    const onChangeHandler = event => {\r\n        const {name, value} = event.currentTarget;\r\n\r\n        if (name === \"userEmail\") {\r\n            setEmail(value);\r\n        } else if (name === \"userPassword\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <div className=\"ui container\">\r\n                <h1>Weight Tracker</h1>\r\n                <p>This is an app that helps you track your weight. Please sign in to get started.</p>\r\n                <div className=\"ui vertical labeled icon buttons\">\r\n                    <button\r\n                        className=\"ui button\"\r\n                        onClick={event => signInWithGoogle(event)}\r\n                    >\r\n                        <i className=\"google icon\"></i>\r\n                        Sign in with Google\r\n                    </button>\r\n                    <button\r\n                        className=\"ui button\"\r\n                        onClick={() => setShowEmailForm(true)}\r\n                    >\r\n                        <i className=\"envelope outline icon\"></i>\r\n                        Sign in with Email\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"ui divider\"></div>\r\n            \r\n            <div className=\"ui container\">\r\n                {emailForm()}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;","import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nimport { auth, signInWithGoogle } from \"../firebase\";\r\n\r\nconst SignUp = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n\r\n    const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\r\n        event.preventDefault();\r\n\r\n        try{\r\n            await auth.createUserWithEmailAndPassword(email, password);\r\n        }\r\n        catch(error){\r\n            setError(error);\r\n        }\r\n\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const errorMessage = () => {\r\n        if (error) {\r\n            return (\r\n                <div className=\"ui message red\">\r\n                    <div className=\"header\">Error</div>\r\n                    {error.message}\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"userEmail\") {\r\n            setEmail(value);\r\n        } else if (name === \"userPassword\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ui container\">\r\n            <h1>Sign Up</h1>\r\n            <form className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"userEmail\"\r\n                        value={email}\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"userPassword\"\r\n                        value={password}\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                </div>\r\n\r\n                {errorMessage()}\r\n\r\n                <button\r\n                    className=\"ui button\"\r\n                    onClick={event => {createUserWithEmailAndPasswordHandler(event, email, password)}}\r\n                >\r\n                    Sign Up\r\n                </button>\r\n                <p>or</p>\r\n                <button\r\n                    className=\"ui labeled icon button\"\r\n                    onClick={signInWithGoogle}\r\n                >\r\n                    <i className=\"google icon\"></i>\r\n                    Sign in with Google\r\n                </button>\r\n                <p>\r\n                    Already have an account?\r\n                    {\" \"}\r\n                    <Link to=\"/\">\r\n                        Sign In Here\r\n                    </Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import React, { useState, useEffect, createContext } from \"react\";\r\n\r\nimport { auth } from \"../firebase\";\r\n\r\nexport const UserContext = createContext({ user: null });\r\n\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            auth.onAuthStateChanged(userAuth => {\r\n                setUser(userAuth);\r\n            })\r\n        },\r\n        []\r\n    );\r\n\r\n    return (\r\n        <UserContext.Provider value={user}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport default UserProvider;","import React, { useContext } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nimport { UserContext } from \"../providers/UserProvider\";\r\n\r\nconst ProfilePage = () => {\r\n    const user = useContext(UserContext);\r\n    \r\n    const { email } = user;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui container\">\r\n                <p>{email}</p>\r\n            </div>\r\n            <button\r\n                className=\"ui button\"\r\n                onClick={() => auth.signOut()}\r\n            >\r\n                Sign Out\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;","import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst PasswordReset = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        if (name === \"userEmail\") {\r\n            setEmail(value);\r\n        }\r\n    };\r\n\r\n    const sendResetEmail = event => {\r\n        event.preventDefault();\r\n\r\n        auth\r\n            .sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setEmailHasBeenSent(true);\r\n                setTimeout(() => {setEmailHasBeenSent(false)}, 3000);\r\n            })\r\n            .catch(error => {setError(error)});\r\n    };\r\n\r\n    const errorMessage = () => {\r\n        if (error) {\r\n            return (\r\n                <div className=\"ui message red\">\r\n                    <div className=\"header\">Error</div>\r\n                    {error.message}\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const emailSentMessage = () => {\r\n        if (emailHasBeenSent) {\r\n            return (\r\n                <div className=\"ui message green\">\r\n                    <div className=\"header\">Success</div>\r\n                    Email has been sent.\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ui container\">\r\n            <h1>Password Reset</h1>\r\n            <form className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"userEmail\"\r\n                        value={email}\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                </div>\r\n                {errorMessage()}\r\n                {emailSentMessage()}\r\n                <button\r\n                    className=\"ui button\"\r\n                    onClick={event => sendResetEmail(event)}\r\n                >\r\n                    Send Me a Reset Link\r\n                </button>\r\n            </form>\r\n            <Link to=\"/\">\r\n                Back to Sign In Page\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PasswordReset;","import React, { useContext } from 'react';\nimport { Router } from \"@reach/router\";\n\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport ProfilePage from \"./ProfilePage\";\nimport PasswordReset from \"./PasswordReset\";\n\nimport { UserContext } from \"../providers/UserProvider\";\n\nfunction Application() {\n  const user = useContext(UserContext);\n  \n  return (\n    user ?\n    <ProfilePage /> :\n    <Router>\n      <SignIn path=\"/\" />\n      <SignUp path=\"signUp\" />\n      <PasswordReset path=\"passwordReset\" />\n    </Router>\n  );\n}\n\nexport default Application;\n","import React from \"react\";\r\n\r\nimport Application from \"./Components/Application\";\r\nimport UserProvider from \"./providers/UserProvider\";\r\n\r\nfunction App() {\r\n    return (\r\n      <UserProvider>\r\n          <Application />\r\n      </UserProvider>\r\n    );\r\n  }\r\n  \r\n  export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}